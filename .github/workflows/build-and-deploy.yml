name: Deploy Quarkus App onto GKE

on:
  workflow_dispatch: 
  # push: [main]
  
env: 
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}      # Add your GCP project id in repository secret 
  GKE_CLUSTER: ${{ secrets.GCP_CLUSTER_NAME }}   # Add your GCP cluster name in repository secret 
  GKE_ZONE: 'us-central1'                        # Add your cluster zone here 
  DEPLOYMENT_NAME: 'quarkus-gke-deploy'          # Add your deployment name here
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
        cache: 'maven'
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
        # On how to fetch and preprocess the GCP auth credentials, refer to: 
        # https://cynicdog.github.io/posts/quarkus-deploy-with-github-actions/#authenticate-with-google-cloud

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ env.PROJECT_ID }}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        install_components: 
          kubectl

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Configure Docker authentication
      run: |
        gcloud auth configure-docker

    # # Create Kubernetes ConfigMap if needed when populating properties that are used for application run  
    # - name: Create Kubernetes ConfigMap
    #   run: |
    #     if ! kubectl get configmap archeio-github-app; then
    #       kubectl create configmap archeio-github-app \
    #         --from-literal=archeio.github.app.client.id=${{ secrets.ARCHEIO_GITHUB_APP_CLIENT_ID }} \
    #         --from-literal=archeio.github.app.client.secret=${{ secrets.ARCHEIO_GITHUB_APP_CLIENT_SECRET }};
    #     else
    #       echo "ConfigMap archeio-github-app already exists. Skipping creation.";
    #     fi

    - name: Build Quarkus App and Push to Image Registry 
      run: |
        mvn clean package -Dquarkus.container-image.build=true \
        -Dquarkus.container-image.push=true \
        -Dquarkus.jib.platforms=linux/arm64/v8 \
        --file pom.xml
    
    - name: Deploy Quarkus App to GKE
      run: | 
        mvn clean package -Dquarkus.kubernetes.deploy=true \
        --file pom.xml
